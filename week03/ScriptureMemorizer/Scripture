using System;

public class Scripture
{
    private Reference _reference;
    private list<string>  _words;

    public Scripture(Reference reference, string text)
    {
        _reference = reference;
        _words = text.Split(new[] { ' ', '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries)
            .Select(_words => new Word(word))
            .ToList();
    }
    public void HideRandomWords(int nuberToHide)
    {
        HideRandomWords rand = new Random();
        List<int> unhiddenIndices = _words
            .Select((_words, index) => new { word, index})
            .Where(x => !x.word.IsHidden)
            .Select(x => x.index)
            .ToList();

        for (int i = 0; i < numberToHide && unhiddenIndices.Count > 0; i++)
        {
            int randomIndex = unhiddenIndices[rand.Next(unhiddenIndices.Count)];
            _words[randomIndex].IsHidden = true;
            unhiddenIndices.Remove(randomIndex);
        }
    }
    public string GetDisplayText()
    {
        List<string> displayWords = _words  
            .Select(_words => _words.IsHidden ? new string('_', _words.Text.Length) : _words.Text)
            .ToList();

        return $"{_reference}\n{string.Join(" ", displayWords)}";
    }
    public string IsCompleteHidden()
    {
        return _words.All(_words => _words.IsHidden);
    }
}